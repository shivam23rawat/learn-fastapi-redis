name: FastAPI CI Pipeline
run-name: ${{ github.actor }} is building this FastAPI app ! ðŸš€

on:
  push:
    branches:
      - main
      - '*CI*'
    paths:
      # only build for source code changes
      - 'src/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # provided by github by default no need to create manually
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment variables
        run: |
          echo "IMAGE_TAG=$(date +'%Y-%m-%d_%H-%M-%S')-${{ github.run_id }}" >> $GITHUB_ENV

      - name: Install Python and dependencies
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install ruff
        run: pip install ruff

      - name: Run ruff
        uses: astral-sh/ruff-action@v3
        with:
          version: v0.11.0
          src: ./src

      - name: Run ruff with fix
        uses: astral-sh/ruff-action@v3
        with:
          version: v0.11.0
          args: check --fix
          src: ./src

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "ci: chore(lint): ðŸ”§ Apply ruff fixes"
          git push

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/fastapi-redis:${{ env.IMAGE_TAG }}

      - name: Image details
        run: echo "Docker image has been pushed to ghcr.io/${{ github.repository }}/fastapi-redis:${{ env.IMAGE_TAG }}"